name: Deploy AI Customer Support Chatbot

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-frontend:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci
      
      - name: Build frontend
        run: npm run build
        env:
          VITE_API_URL: ${{ secrets.BACKEND_API_URL }}

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
          vercel-args: '--prod'

  deploy-java-backend:
    name: Deploy Java Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend-java
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B package --file pom.xml -DskipTests

      # Option for Railway
      - name: Deploy to Railway
        if: ${{ vars.BACKEND_DEPLOY_TARGET == 'railway' }}
        uses: bervProject/railway-deploy@main
        with:
          railway-token: ${{ secrets.RAILWAY_TOKEN }}
          service: ${{ vars.RAILWAY_JAVA_SERVICE_NAME }}
          directory: ./backend-java
        env:
          SPRING_DATASOURCE_URL: ${{ secrets.POSTGRES_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.POSTGRES_USER }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          AI_SERVICE_URL: ${{ secrets.AI_SERVICE_URL }}

      # Option for Heroku
      - name: Deploy to Heroku
        if: ${{ vars.BACKEND_DEPLOY_TARGET == 'heroku' }}
        uses: akhileshns/heroku-deploy@v3.12.14
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ vars.HEROKU_JAVA_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          appdir: "backend-java"
          procfile: "web: java -jar target/app.jar"
        env:
          HD_SPRING_DATASOURCE_URL: ${{ secrets.POSTGRES_URL }}
          HD_SPRING_DATASOURCE_USERNAME: ${{ secrets.POSTGRES_USER }}
          HD_SPRING_DATASOURCE_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          HD_AI_SERVICE_URL: ${{ secrets.AI_SERVICE_URL }}

  deploy-python-service:
    name: Deploy Python AI Service
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend-python
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Option for Railway
      - name: Deploy to Railway
        if: ${{ vars.PYTHON_DEPLOY_TARGET == 'railway' }}
        uses: bervProject/railway-deploy@main
        with:
          railway-token: ${{ secrets.RAILWAY_TOKEN }}
          service: ${{ vars.RAILWAY_PYTHON_SERVICE_NAME }}
          directory: ./backend-python
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          # Add other needed environment variables

      # Option for Heroku
      - name: Deploy to Heroku
        if: ${{ vars.PYTHON_DEPLOY_TARGET == 'heroku' }}
        uses: akhileshns/heroku-deploy@v3.12.14
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ vars.HEROKU_PYTHON_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          appdir: "backend-python"
          procfile: "web: cd app && gunicorn main:app"
        env:
          HD_GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          # Add other needed environment variables