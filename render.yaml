databases:
  - name: chatbot-db
    databaseName: chatbot
    plan: starter

services:
  - type: web
    name: python-ai-service
    env: docker
    dockerfilePath: backend-python/Dockerfile
    autoDeploy: true
    healthCheckPath: /health
    plan: starter
    envVars:
      - key: GOOGLE_API_KEY
        value: AIzaSyBws4xBo1bGCF3Tecqc68FBP44VhcnYY7E
      - key: GEMINI_MODEL
        value: gemini-1.5-flash
      - key: HOST
        value: 0.0.0.0
      - key: ALLOWED_ORIGINS
        value: https://frontend-xxxx.onrender.com

  - type: web
    name: java-backend
    env: docker
    dockerfilePath: backend-java/Dockerfile
    autoDeploy: true
    healthCheckPath: /actuator/health
    plan: starter
    envVars:
      - key: DB_HOST
        fromDatabase:
          name: chatbot-db
          property: host
      - key: DB_PORT
        fromDatabase:
          name: chatbot-db
          property: port
      - key: DB_NAME
        fromDatabase:
          name: chatbot-db
          property: database
      - key: DB_USER
        fromDatabase:
          name: chatbot-db
          property: user
      - key: DB_PASSWORD
        fromDatabase:
          name: chatbot-db
          property: password
      - key: SERVER_PORT
        value: ${PORT}
      - key: SPRING_DATASOURCE_URL
        value: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=require
      - key: AI_SERVICE_URL
        value: https://python-ai-service-xxxx.onrender.com
      - key: APP_CORS_ALLOWED_ORIGINS
        value: https://frontend-xxxx.onrender.com
      - key: JAVA_OPTS
        value: -XX:+UseZGC -XX:+UnlockExperimentalVMOptions -Xmx512m

  - type: web
    name: frontend
    env: static
    buildCommand: npm ci && npm run build
    staticPublishPath: dist
    envVars:
      - key: VITE_API_URL
        value: https://java-backend-xxxx.onrender.com