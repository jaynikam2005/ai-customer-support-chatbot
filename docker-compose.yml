services:
  postgres:
    image: postgres:16
    container_name: chatbot-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-chatbot}
      POSTGRES_USER: ${POSTGRES_USER:-chatbot_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-chatbot_password}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-schema.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - chatbot-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-chatbot_user} -d ${POSTGRES_DB:-chatbot}"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  python-ai-service:
    build:
      context: ./backend-python
      dockerfile: Dockerfile
    container_name: chatbot-python-ai
    ports:
      - "${PYTHON_PORT:-5000}:${PORT:-5000}"
    env_file:
      - ./backend-python/.env
    environment:
      - PYTHONPATH=/workspace
      - PYTHONUNBUFFERED=1
      - HOST=0.0.0.0
      - PORT=${PORT:-5000}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:5173}
    volumes:
      - ./backend-python/app:/workspace/app
    networks:
      - chatbot-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${PORT:-5000}/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  java-backend:
    build:
      context: ./backend-java
      dockerfile: Dockerfile
    container_name: chatbot-java-backend
    ports:
      - "${JAVA_PORT:-8080}:${SERVER_PORT:-8080}"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${POSTGRES_DB:-chatbot}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER:-chatbot_user}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD:-chatbot_password}
      - AI_SERVICE_URL=http://python-ai-service:${PORT:-5000}
      - SERVER_PORT=${SERVER_PORT:-8080}
      - APP_CORS_ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:5173}
      - JAVA_OPTS=-XX:+UseZGC -XX:+UnlockExperimentalVMOptions -Xmx512m
    networks:
      - chatbot-network
    depends_on:
      python-ai-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${SERVER_PORT:-8080}/actuator/health || exit 1"]
      interval: 45s
      timeout: 30s
      retries: 5
      start_period: 120s
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=${VITE_API_URL:-http://localhost:8080}
    container_name: chatbot-frontend
    ports:
      - "${FRONTEND_PORT:-3000}:${FRONTEND_CONTAINER_PORT:-3000}"
    environment:
      - PORT=${FRONTEND_CONTAINER_PORT:-3000}
      - VITE_API_URL=${VITE_API_URL:-http://localhost:8080}
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - /app/node_modules
    networks:
      - chatbot-network
    depends_on:
      java-backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${FRONTEND_CONTAINER_PORT:-3000} || exit 1"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 180s
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  chatbot-network:
    driver: bridge